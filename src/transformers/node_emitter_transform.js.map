{"version":3,"file":"node_emitter_transform.js","sourceRoot":"","sources":["../../../../../packages/compiler-cli/src/transformers/node_emitter_transform.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAGH,+BAAiC;AAGjC,+CAAqD;AACrD,+BAAuC;AAEvC,IAAM,QAAQ,GAAG,iMAKd,CAAC;AAEJ,2CAAkD,OAAgB;IAEhE,MAAM,CAAC;QACL,IAAM,OAAO,GAAG,IAAI,oCAAqB,EAAE,CAAC;QAC5C,MAAM,CAAC,UAAS,UAAyB;YACvC,IAAM,CAAC,GAAG,OAAO,CAAC,gBAAgB,CAAC,UAAU,CAAC,QAAQ,CAAkB,CAAC;YACzE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACV,IAAA,0EAAa,CAA4D;gBAChF,MAAM,CAAC,aAAa,CAAC;YACvB,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,sBAAe,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACrD,MAAM,CAAC,EAAE,CAAC,oBAAoB,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;YACjD,CAAC;YACD,MAAM,CAAC,UAAU,CAAC;QACpB,CAAC,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;AAfD,8EAeC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {GeneratedFile} from '@angular/compiler';\nimport * as ts from 'typescript';\n\nimport {Program} from './api';\nimport {TypeScriptNodeEmitter} from './node_emitter';\nimport {GENERATED_FILES} from './util';\n\nconst PREAMBLE = `/**\n* @fileoverview This file is generated by the Angular template compiler.\n* Do not edit.\n* @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n* tslint:disable\n*/`;\n\nexport function getAngularEmitterTransformFactory(program: Program): () =>\n    (sourceFile: ts.SourceFile) => ts.SourceFile {\n  return function() {\n    const emitter = new TypeScriptNodeEmitter();\n    return function(sourceFile: ts.SourceFile): ts.SourceFile {\n      const g = program.getGeneratedFile(sourceFile.fileName) as GeneratedFile;\n      if (g && g.stmts) {\n        const [newSourceFile] = emitter.updateSourceFile(sourceFile, g.stmts, PREAMBLE);\n        return newSourceFile;\n      } else if (GENERATED_FILES.test(sourceFile.fileName)) {\n        return ts.updateSourceFileNode(sourceFile, []);\n      }\n      return sourceFile;\n    };\n  };\n}\n"]}